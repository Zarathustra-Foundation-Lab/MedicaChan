type HealthCheckup = record {
  id : text;
  is_public : bool;
  data : HealthData;
  date : nat64
};

type HealthData = record {
  photo_url : opt text;
  sleep_hours : opt float32;
  blood_pressure : text;
  temperature : float32;
  mood : text;
  note : text;
  activity_level : opt text;
  respiration_rate : opt nat32;
  heart_rate : nat32
};

type Result = variant { Ok : HealthCheckup; Err : text };
type Result_1 = variant { Ok : vec HealthCheckup; Err : text };
type Result_2 = variant { Ok : User; Err : text };
type Result_3 = variant { Ok; Err : text };
type User = record {
  id : principal;
  age : nat32;
  chronic_diseases : opt text;
  weight_kg : opt float32;
  total_rewards : nat64;
  gender : text;
  health_data : vec HealthCheckup;
  height_cm : opt float32;
  allergies : opt text;
  full_name : text
};

service : {
  add_checkup : (principal, HealthData) -> (Result);
  get_private_data : (principal) -> (Result_1) query;
  get_public_data : () -> (vec HealthCheckup) query;
  get_user_history : (principal) -> (Result_1) query;
  get_user_profile : (principal) -> (Result_2) query;
  publish_checkup : (principal, text) -> (Result_3);
  register_user : (
    principal,
    text,
    nat32,
    text,
    opt float32,
    opt float32,
    opt text,
    opt text
  ) -> (Result_2);
  reward_user : (principal, nat64) -> (Result_2)
}
